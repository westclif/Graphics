// Raytracing includes
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/Raytracing/Shaders/RaytracingIntersection.hlsl"

[shader("miss")]
void MissShaderShadows(inout RayIntersection rayIntersection : SV_RayPayload)
{
    rayIntersection.color = float3(1.0, 1.0, 1.0);
}

[shader("miss")]
void MissShaderShadowsColor(inout RayIntersection rayIntersection : SV_RayPayload)
{
    // Does nothing intentionally
}

// This code below is the "high quality shadow" but it is not used currently. We use the compute version which is more efficient
// and which do a good enough approximation.
[shader("raygeneration")]
void RayGenAreaShadows()
{

}

// Fallback default any hit shader for this raytrace shader
[shader("anyhit")]
void AnyHitMain(inout RayIntersection rayIntersection : SV_RayPayload, AttributeData attributeData : SV_IntersectionAttributes)
{
}



[shader("raygeneration")]
void RayGenAreaShadowSingle()
{
}


[shader("raygeneration")]
void RayGenDirectionalShadowSingle()
{
}


[shader("raygeneration")]
void RayGenDirectionalColorShadowSingle()
{
}

[shader("raygeneration")]
void RayGenShadowSegmentSingle()
{
}

[shader("raygeneration")]
void RayGenSemiTransparentShadowSegmentSingle()
{
}
